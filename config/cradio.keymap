/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// layers

#define L_DEFAULT 0
#define L_SYM     1
#define L_NUM     2
#define L_NAV     3
#define L_GAME1   4

&mt {
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

// key positions
// -------------------------------------------------------
// |  0 |  1 |  2 |  3 |  4 |   |  5 |  6 |  7 |  8 |  9 |
// | 10 | 11 | 12 | 13 | 14 |   | 15 | 16 | 17 | 18 | 19 |
// | 20 | 21 | 22 | 23 | 24 |   | 25 | 26 | 27 | 28 | 29 |
//                | 30 | 31 |   | 32 | 33 |

/ {
    combos {
        compatible = "zmk,combos";

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <2 1>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <3 2>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <11 12>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <13 12>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <21 22>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <23 22>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <7 6>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <8 7>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <16 17>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <17 18>;
        };

        exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <26 27>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <27 28>;
        };

        game1_layer {
            bindings = <&tog L_GAME1>;
            key-positions = <2 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------
            // |   Q  |  W  |  F  |  P  |  B  |   |  J  |  U   |  U  |  Y  |  '  |
            // |   A  |  R  |  T  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |
            // |   Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  |
            //                    | SPC | TAB |   | ENT | BKSP |

            bindings = <
&kp Q           &kp W           &kp F               &kp P             &kp B            &kp J            &kp L              &kp U        &kp Y            &kp SQT
&mt LEFT_GUI A  &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LEFT_SHIFT T  &kp G            &kp M            &mt RIGHT_SHIFT N  &mt RCTRL E  &mt RIGHT_ALT I  &mt RIGHT_WIN O
&kp Z           &kp X           &kp C               &kp D             &kp V            &kp K            &kp H              &kp COMMA    &kp DOT          &kp FSLH
                                                    &lt L_NAV SPACE   &lt L_NUM TAB    &lt L_SYM ENTER  &kp BACKSPACE
            >;
        };

        symbols_layer {
            // ------------------------------------------------------
            // | & | ~ | % | `  | =  |   | BT0 |  F7  | F8 | F9 | F12 |
            // | ; | $ | # | *  | +  |   | BT1 |  F4  | F5 | F6 | F11 |
            // | ^ | _ | @ | |  | \  |   | BT2 |  F1  | F2 | F3 | F10 |
            //             | v+ | v- |   | ENT | BKSP |

            bindings = <
&kp AMPERSAND  &kp TILDE   &kp PERCENT  &kp GRAVE        &kp EQUAL            &bt BT_SEL 0  &kp F7      &kp F8  &kp F9  &kp F12
&kp SEMI       &kp DOLLAR  &kp HASH     &kp ASTERISK     &kp PLUS             &bt BT_SEL 1  &kp F4      &kp F5  &kp F6  &kp F11
&kp CARET      &kp UNDER   &kp AT_SIGN  &kp PIPE         &kp BACKSLASH        &bt BT_SEL 2  &kp F1      &kp F2  &kp F3  &kp F10
                                        &kp C_VOLUME_UP  &kp C_VOLUME_DOWN    &trans        &bt BT_CLR
            >;
        };

        num_layer {
            // ----------------------------------------------------
            // | Q | W | F |  P  |  B  |   | J |   7  | 8 | 9 | ' |
            // | A | R | T |  T  |  G  |   | M |   4  | 5 | 6 | O |
            // | Z | X | C |  D  |  V  |   | K |   1  | 2 | 3 | / |
            //             | SPC | TAB |   | 0 | BKSP |

            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
                        &trans  &trans    &kp N0  &trans
            >;
        };

        nav_layer {
            // ----------------------------------------------------
            // | Q | W | F |  P  |  B  |   |   J  | S-LEFT | S-DOWN | S-UP | S-RIGHT |
            // | A | R | T |  T  |  G  |   | CAPS |  LEFT  |  DOWN  |   UP |  RIGHT  |
            // | Z | X | C |  D  |  V  |   |  INS |  HOME  | P_DOWN | P_UP |    END  |
            //             | SPC | TAB |   |  ENT |  BKSP  |

            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans      &kp LG(LEFT)    &kp LG(DOWN_ARROW)  &kp LG(UP_ARROW)  &kp LG(RIGHT)
&trans  &trans  &trans  &trans  &trans    &caps_word  &kp LEFT_ARROW  &kp DOWN_ARROW      &kp UP_ARROW      &kp RIGHT
&trans  &trans  &trans  &trans  &trans    &kp INSERT  &kp HOME        &kp PAGE_DOWN       &kp PAGE_UP       &kp END
                        &trans  &trans    &trans      &trans
            >;
        };

        game1_layer {
            // -------------------------------------------------------------------
            // |  1  |   2  |   3  |    4  |  5  |   |  J  |  U   |  U  |  Y  |  '  |
            // |  W  |   R  |  UP  |    I  |  J  |   |  M  |  N   |  E  |  I  |  O  |
            // | ESC | LEFT | DOWN | RIGHT |  M  |   |  K  |  H   |  ,  |  .  |  /  |
            //                     | SPC   | TAB |   | ENT | BKSP |

            bindings = <
&kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4     &kp NUMBER_5    &trans  &trans  &trans  &trans  &trans
&kp W         &kp R           &kp UP_ARROW    &kp I            &kp J           &trans  &trans  &trans  &trans  &trans
&kp ESCAPE    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp M           &trans  &trans  &trans  &trans  &trans
                                              &trans           &trans          &trans  &trans
            >;
        };
    };
};
